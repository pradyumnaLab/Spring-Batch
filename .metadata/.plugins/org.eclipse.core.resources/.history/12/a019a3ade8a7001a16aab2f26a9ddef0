package com.pk.batch.BatchDemo.configuration;

import org.springframework.batch.core.Job;
import org.springframework.batch.core.Step;
import org.springframework.batch.core.configuration.annotation.JobBuilderFactory;
import org.springframework.batch.core.configuration.annotation.StepBuilderFactory;
import org.springframework.batch.core.launch.support.RunIdIncrementer;
import org.springframework.batch.item.ItemProcessor;
import org.springframework.batch.item.ItemReader;
import org.springframework.batch.item.ItemWriter;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import com.pk.batch.BatchDemo.model.User;

@Configuration
public class BatchConfiguration {

	@Bean
	public Job job(JobBuilderFactory jobBuilderFactory, StepBuilderFactory stepBuilderFactory,
			ItemReader<User> itemReader, ItemProcessor<User, User> itemPocessor, 
			ItemWriter<User> itemWriter) {
			
		Step flow =stepBuilderFactory.get("Step-1")
				.<User, User> chunk(100)
				.reader(itemReader)
				.processor(itemPocessor)
				.writer(itemWriter)
				.build();
				
		Job jon= jobBuilderFactory.get("ETL-Load")	
					.incrementer(new RunIdIncrementer())
					.start(flow)
					.build();
		
		return job
		
	}

	public ItemReader getReader() {

	}
}
